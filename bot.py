import discord
import os
from discord.ext import tasks

client = discord.Client()
admin = "üçÄ ‚Ä¢ –õ–∞–∫–∏—á"
channels = ["798454449697325066", "775292935948075008", "804080163826040842"]
reacts = ['0Ô∏è‚É£', '1Ô∏è‚É£', '2Ô∏è‚É£', '3Ô∏è‚É£', '4Ô∏è‚É£', '5Ô∏è‚É£', '6Ô∏è‚É£', '7Ô∏è‚É£', '8Ô∏è‚É£', '9Ô∏è‚É£']

@tasks.loop(seconds=300)
async def update_stats():
    for i in range(3):
        cid = int( channels[i] )
        channel = client.get_channel(cid)
        guild = channel.guild
        if i == 0:
            value = str(guild.member_count)
            await channel.edit(name=f"–£—á–∞—Å—Ç–Ω–∏–∫–∏: {value}")
        elif i == 1:
            value = str(guild.premium_subscription_count)
            await channel.edit(name=f"–ë—É—Å—Ç–µ—Ä—ã: {value}")
        else:
            value = 0
            for member in guild.members:
                if str(member.status) == "online":
                    value += 1
            value = str(value)
            await channel.edit(name=f"–û–Ω–ª–∞–π–Ω: {value}")

@client.event
async def on_ready():
    await client.change_presence(activity=discord.Activity(type=discord.ActivityType.listening, name='–≤–∞—à–∏ %–∫–æ–º–∞–Ω–¥—ã'))
    update_stats.start()
    print("Logged in as {0.user}".format(client))

@client.event
async def on_message(message):
    if message.author == client.user:
        return
    
    if message.content.startswith("%—é—Ç—É–±"):
        await message.channel.send("https://www.youtube.com/channel/UCS943x0zbAvopIVsdTXkLjg")
        return
    
    if message.content.startswith("%–ø—Ä–∏–≤–µ—Ç"):
        await message.channel.send("–ò —Ç–µ–±–µ –ø—Ä–∏–≤–µ—Ç!")
        return
    
    if message.content.startswith("%–ª–∞–∫–∏"):
        await message.channel.send("–õ–∞–∫–∏ - –∫—Ä—É—Ç–æ–π —á—É–≤–∞–∫!")
        return

    if message.content.startswith("%–∏–Ω—Ñ–æ"):
        await message.channel.send("–Ø - –õ–∞–∫–∏–ë–æ—Ç. –Ø —É–º–µ—é –º–Ω–æ–≥–æ —á–µ–≥–æ (–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)! –¢–∞–∫–æ–π –∂–µ —Ñ–æ—Ä—Ç–æ–≤—ã–π –∫–∞–∫ –∏ –õ–∞–∫–∏.")
        return

    if message.content.startswith("%–∫–æ–º–∞–Ω–¥—ã"):
        await message.channel.send("–í–æ—Ç –º–æ–µ –º–∞—Å—Ç–µ—Ä—Å—Ç–≤–æ:\n \n- %—é—Ç—É–±\n- %–ø—Ä–∏–≤–µ—Ç\n- %–ª–∞–∫–∏\n- %–∏–Ω—Ñ–æ\n- %–∫–æ–º–∞–Ω–¥—ã")
        return
    
    if message.content.startswith("%–æ—Ç–ø—Ä–∞–≤–∏—Ç—å embed"):
        if message.author.top_role.name == admin:
            rawmsg = message.content
            msg = rawmsg[17:]
            msgspl = msg.split(";")
            if len(msgspl) < 2:
                await message.channel.send("–ù–µ–≤–µ—Ä–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞!")
                return
            embed = discord.Embed(title=msgspl[0], description=msgspl[1])
            await message.channel.send(embed=embed)
            await message.delete()
        else:
            await message.channel.send("–¢—ã –Ω–µ –º–æ–∂–µ—à—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É!")
        return

    if message.content.startswith("%–æ—Ç–ø—Ä–∞–≤–∏—Ç—å"):
        if message.author.top_role.name == admin:
            msg = message.content
            await message.channel.send(msg[11:])
            await message.delete()
        else:
            await message.channel.send("–¢—ã –Ω–µ –º–æ–∂–µ—à—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É!")
        return

    if message.content.startswith("%–æ–ø—Ä–æ—Å"):
        if message.author.top_role.name == admin:
            rawmsg = message.content
            msg = rawmsg[7:]
            msgspl = msg.split(";")
            if len(msgspl) < 3 or len(msgspl) > 11:
                await message.channel.send("–ù–µ–≤–µ—Ä–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞!")
                return
            pollmsg = f"{msgspl[0]}\n \n"
            for i in range(len(msgspl)-1):
                pollmsg += f"{reacts[i]} - {msgspl[i+1]}\n"
            poll = await message.channel.send(pollmsg)
            for i in range(len(msgspl)-1):
                await poll.add_reaction(reacts[i])
            await message.delete()
        else:
            await message.channel.send("–¢—ã –Ω–µ –º–æ–∂–µ—à—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É!")
        return

client.run(os.getenv("TOKEN"))